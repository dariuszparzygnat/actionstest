name: 'Deploy db as container reusable'

on:
  workflow_call:
    inputs:
      withresourcegroumname:
        description: 'Resource group name where container will be placed'
        required: true
        type: string
      withcontainerinstancename:
        description: 'Container instance name that will be used in dns name of container'
        required: true
        type: string
      withdbcontainername:
        description: 'If the db other than empty is required. Default: empty'
        required: false
        type: string
      withdbcontainerversion:
        description: 'If the specific version of db is required. Default: latest'
        required: false
        type: string
      withregion:
        description: 'Location of the container. Default: west europe'
        required: false
        type: string
    outputs:
      sqlconnectionstr:
        description: 'Connection string'
        value: ${{ jobs.create_db_container.outputs.connectionstring}}
        run: echo "::set-output name=sqlconnectionstr::$(terraform output connectionstring)"  
jobs:
  create_db_container:
    name: 'Create database container'
    runs-on: ubuntu-latest 
    env:
      container_version:  ${{ github.event.inputs.withdbcontainerversion == '' && 'latest' ||  github.event.inputs.withdbcontainerversion  }} 
      container_name: ${{ github.event.inputs.withdbcontainername == '' && 'empty' ||  github.event.inputs.withdbcontainername  }}
      container_location: ${{ github.event.inputs.withregion == '' && 'west europe' ||  github.event.inputs.withregion  }}
    outputs:
      connectionstring: ${{ format('Server=tcp:{0}.westeurope.azurecontainer.io,1433;Initial Catalog=wbdatabase;Persist Security Info=False;User ID={1};Password={2};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;', github.event.inputs.withcontainerinstancename, secrets.DB_USERID, secrets.DB_PASSWORD}}

    defaults:
      run:
        shell: bash
    
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1'
      with:
        resource-group: ${{github.event.inputs.withresourcegroumname}}
        dns-name-label: ${{github.event.inputs.withcontainerinstancename}}
        image: ${{ format('wbdevcr.azurecr.io/databases/{0}:{1}', env.container_name, env.container_version)  }} 
        ports: 1433
        cpu: 2   #Optional
        memory: 8   #Optional
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: ${{github.event.inputs.withcontainerinstancename}}
        location: ${{env.container_location}} 