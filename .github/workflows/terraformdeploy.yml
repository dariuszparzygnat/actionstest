name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      buildnumber:
        description: 'Build number'
        required: true
      withappinsights:
        description: 'If app insights needed, then true'
        required: false

env:
  AZURE_WEBAPP_PACKAGE_PATH: '.' 

jobs:
  create_infrastructure_azure:
    name: 'Create infrastructure on Azure'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Download a file
      uses: carlosperate/download-file-action@v1.0.3
      id: download_deploy_file
      with:
        file-url: 'https://${{ secrets.ACCOUNT_NAME }}.blob.core.windows.net/trf/deploy.tf'
        
    - name: Download a file
      uses: carlosperate/download-file-action@v1.0.3
      id: download_var_file
      with:
        file-url: 'https://${{ secrets.ACCOUNT_NAME }}.blob.core.windows.net/trf/variables.tf'
    
      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        terraform plan -var="buildnumber=${{ github.event.inputs.buildnumber }}"

      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply      
      run: |
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        terraform apply -var="buildnumber=${{ github.event.inputs.buildnumber }}" -auto-approve
  
  create_app_insights:
    if: github.event.inputs.withappinsights == 'true'
    name: 'Create app insights on Azure'
    runs-on: ubuntu-latest
    needs: [create_infrastructure_azure]

    outputs:
      ik: ${{ steps.getting_ik.outputs.instrumentationkey }}
    defaults:
      run:
        shell: bash

    steps:
    - name: Download a file
      uses: carlosperate/download-file-action@v1.0.3
      id: download_deploy_file
      with:
        file-url: 'https://${{ secrets.ACCOUNT_NAME }}.blob.core.windows.net/trf/appinsights/deploy.tf'
        
    - name: Download a file
      uses: carlosperate/download-file-action@v1.0.3
      id: download_var_file
      with:
        file-url: 'https://${{ secrets.ACCOUNT_NAME }}.blob.core.windows.net/trf/appinsights/variables.tf'
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Apply      
      run: |
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        terraform apply -var="buildnumber=${{ github.event.inputs.buildnumber }}" -auto-approve
    - name: Set instrumentation key
      id: getting_ik
      run: echo "::set-output name=instrumentationkey::$(terraform output application_insights_instrumentation_key)"
  
  deploy_app:
    name: 'Deploy on Azure'
    runs-on: ubuntu-latest
    needs: [create_infrastructure_azure]
    
    defaults:
      run:
        shell: bash

    steps:     
    - name: Download a file
      uses: carlosperate/download-file-action@v1.0.3
      id: download-artifact
      with:
        file-url: 'https://${{ secrets.ACCOUNT_NAME }}.blob.core.windows.net/artifacts/DpTest/DpTest_DeployTest/${{ github.event.inputs.buildnumber }}/WorkBookv9.zip'
    - name: Azure Login
      uses: azure/login@v1
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: 'wbtest${{ github.event.inputs.buildnumber }}'
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/WorkBookv9.zip'
    - name: 'Virtual path settings'
      run: az resource update --name 'wbtest${{ github.event.inputs.buildnumber }}/config/web' --resource-group 'wbtest${{ github.event.inputs.buildnumber }}' --resource-type 'Microsoft.Web/sites/config' --set 'properties.virtualApplications=[{\'virtualPath\':\'\/\',\'physicalPath\':\'site\\wwwroot\',\'virtualDirectories\':null},{\'virtualPath\':\'\/api\',\'physicalPath\':\'site\\wwwroot\\api\',\'virtualDirectories\':null},{\'virtualPath\':\'\/report\',\'physicalPath\':\'site\\wwwroot\\report\',\'virtualDirectories\':null}]'        
  add_instrumentation_key:
    name: 'Add ik to settings'
    runs-on: ubuntu-latest
    needs: [create_app_insights, deploy_app]
    
    defaults:
      run:
        shell: bash
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
       
    - name: Add ik setting
      run: |
       az webapp config appsettings set -g 'wbtest${{ github.event.inputs.buildnumber }}' -n 'wbtest${{ github.event.inputs.buildnumber }}' --settings APPINSIGHTS_INSTRUMENTATIONKEY=${{needs.create_app_insights.outputs.ik}}

